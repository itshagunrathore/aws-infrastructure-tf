// Code generated by mockery v2.13.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	"gitlab.teracloud.ninja/teracloud/pod-services/baas-spike/commons/drivers/secrets"
)

// CloudSecrets is an autogenerated mock type for the CloudSecretsInteface type
type CloudSecrets struct {
	mock.Mock
}

// GetAWSSecret provides a mock function with given fields: request
func (_m *CloudSecrets) GetAWSSecret(request *secrets.SecretsDriver) (string, error) {
	//ret := _m.Called(request)
	//
	//var r0 string
	//if rf, ok := ret.Get(0).(func(*secrets.SecretsDriver) string); ok {
	//	r0 = rf(request)
	//} else {
	//	r0 = ret.Get(0).(string)
	//}
	//
	//var r1 error
	//if rf, ok := ret.Get(1).(func(*secrets.SecretsDriver) error); ok {
	//	r1 = rf(request)
	//} else {
	//	r1 = ret.Error(1)
	//}
	//return r0, r1
	return "Success from AWS", nil
}

type MockConstructorTestingTNewCloudSecrets interface {
	mock.TestingT
	Cleanup(func())
}

// NewGetCloudSecretsInterface creates a new instance of CloudSecrets. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewGetCloudSecretsInterface(t MockConstructorTestingTNewCloudSecrets) *CloudSecrets {
	mock := &CloudSecrets{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
